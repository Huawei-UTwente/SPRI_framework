%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Direct collocation format of the trajectory optimization in muscle
% dynamics and reflex controllers. Neural transfer delay and 
% electricalmechanical delay are considered
%
% By: Huawei Wang
% Date: August 2, 2020
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


function f = directCollocationDyn_RPO3(x, dx, x_em, x_rf, lmt, lmt_rf,...
             par_rf_fse, par_rf_lce, par_rf_res, par_mus, M)
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% INPUTS:
    % x: the state variables at the current frame.
    % dx: the state derivatives at the current frame.
    % x_em: the state for muscle activation with the electricalmechanical delay.
    % x_rf: the state for reflex feeback with the neural transfer delay.
    % M: number of muscles in each data trials, they should maintain the same
    %    number among trials at current optimization framwork.
    % lmt: experimental muscle tendon length at current frame.
    % lmt_rf: experimental muscle tendon length at the reflex control frame.
    % par_rf_fse: the reflex control gains for the force feedback loop
    % par_rf_lce: the reflex control gains for the fiber length feedback loop.
    % par_rf_res: the throesholds and base stimulations for the reflex
    %             controller
    % par_mus: the optimized muscle parameters, not optimize here anymore.
    % M: number of muscles
% OUTPUTS:
    % f: constraints of reflex control and muscle dynamics
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    
    % muscle model parameters
    lce_opt = par_mus(1 : M);
    lt_slack = par_mus(M+1 : 2*M);
    theta0 = par_mus(2*M+1 : 3*M);
    
    % generate muscle stimulation based on the reflex controller, at the rf
    % frame
    lce_rf = x_rf(2*M+1 : 3*M);  % length of contract element at x_rf
    fse_rf = tendenForce_Groote_RPO(lmt_rf, lce_rf, lce_opt, lt_slack, theta0); %muscle force
    
    % normalize the lce length with the LceOpt
    rlce_rf = lce_rf./lce_opt;
    % drlce_rf_dlce_rf = 1./lce_opt;
    
    % generate muscle stimulation based on the reflex control
    
    s_rf = fullReflexController(rlce_rf, fse_rf, par_rf_fse, par_rf_lce, par_rf_res, M);
    % get the optimizing free muscle stimulation from the em frame, this
    % optimizing parameters should equal to the stimulation generated by
    % the refelx controller at the rf frame  
    s_em = x_em(4*M+1 : 5*M);  % the optimizing free muscle stimulation
    
    % the constraint that the free muscle stimulation = output of reflex
    % controller
    fs = s_rf - s_em;
    
    a = x(1 : M);  % muscle activation at current frame
    da = x(M+1 : 2*M);  % muscle activation differentiation at current frame
    lce = x(2*M+1 : 3*M);  % length of contract element at current frame
    dlce = x(3*M + 1 : 4*M);  % length of contract element differentiation at current frame

    d_a = dx(1 : M);  % muscle activation differentiation at current frame
    d_lce = dx(2*M + 1 : 3*M);  % length of contract element differentiation at current frame

    % constraints of finite differetiations
    fd = [da - d_a, dlce - d_lce];

    % muscle activation dynamics
    fa = activationDyn_Groote(a, da, s_em);

    % activiation nonlinearity, [not needed for the leg muscles]
    % a_non = activationNonlinearty(a);
    
    % muscle force dynamics
%     fm = contractionDyn_Groote(lmt, a, lce, dlce, lce_opt, ...
%                                lt_slack, theta0);
                           
    fm = contractionDyn_Groote_RPO(lmt, a, lce, dlce, lce_opt, ...
                               lt_slack, theta0);

    % generate the combined constraints
    f = [fd, fa, fm, fs];
end